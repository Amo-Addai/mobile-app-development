<Page
        x:Class="SampleWinPhone.MainPage"
        xmlns="microsoft winfx xaml namespace url presentation"
        xmlns:x="microsoft winfx xaml namespace url"
        xmlns:local="using:SampleWinPhone"
        xmlns:d="microsoft winfx xaml blend url"
        xmlns:mc="microsoft winfx xaml markup-compatibility url"
        mc:Ignorable="d"
        Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">


    <!--

    Layouts:

    StackPanel, Grid, Canvas
    FlipView, GridView, Hub, 


    Components:

    Pointer, Border, Button, CheckBox, ComboBox, DatePicker,
    Image, ListView, MenuFlyout, Pivot, PivotItem, RadioButton,
    TextBlock, TextBox, TimePicker,
    ...


    Shapes:

    Rectangle, 


    Props:

    Content - inner text/html
    Children - inner html
    Margin - l t r b
    Height / Width - v
    Vertical/HorizontalAlignment -
    TextAlignment - 

    -->

    
    <!-- <!-- TODO: release comment -->

    <StackPanel Orientation="Horizontal"> <!-- vertical-aligned by default - from top-left to bottom-left -->

        <!-- all children horizontal-aligned by config - form center-left to center-right -->

        <Button Content="Click Me" Margin="100 0 0 0" Background="Green"></Button>

        <Button Margin="100">
            <Button.Content>Click Me</Button.Content>
            <Button.Background>Blue</Button.Background>
            <Button.Background>
                <SolidColorBrush>Blue</SolidColorBrush>
                <!-- ImageBrush, LinearGradientBrush, WebViewBrush, .. -->
            </Button.Background>
            <Button.Background>
                <LinearGradientBrush>
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0.0" Color="Red"></GradientStop>
                        <GradientStop Offset="1.0" Color="Green"></GradientStop>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Button.Background>
        </Button>

        <TextBlock Text="Sample Text" HorizontalAlignment="Left" Height="640" Margin="0 15 0 0" TextWrapping="Wrap" FontSize="25" TextAlignment="Center">
            or, "Sample Text"
        </TextBlock>

    </StackPanel>

    <Grid>
        <Grid.ColumnDefinitions> <!-- 3 cols - 0-1st indexing -->
            <ColumnDefinition Width="100"></ColumnDefinition> <!-- fixed width -->
            <ColumnDefinition Width="auto"></ColumnDefinition> <!-- min content-based width -->
            <ColumnDefinition Width="*"></ColumnDefinition> <!-- max unused width - equally shared among *s -->

        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions> <!-- 3 rows -->
            <RowDefinition Height="100"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>

        </Grid.RowDefinitions>

        <Button></Button> <!-- vertical center-left aligned in 1st (top-left) grid-cell by default -->
        <Button Grid.Column="2" Grid.Row="1" HorizontalAlignment="Center"></Button> <!-- 3rd col, 2nd row (0-1st based indexing), 'Center' alignment (of default vertical-center) -->

    </Grid>

    <Canvas> <!-- custom-drawable panel - to layout elems / shapes with motion / animations -->
        <Rectangle Fill="Red" Width="100" Height="100"></Rectangle>

    </Canvas>

    <!-- -- > -->

    <StackPanel>

        <TextBlock Margin="0 15 0 0" FontSize="25" TextAlignment="Center">
            Invoice
        </TextBlock>

        <StackPanel Orientation="Horizontal" Margin="0 25 0 0">
            <TextBlock FontSize="25" VerticalAlignment="Center" TextAlignment="Center">Amount</TextBlock>
            <TextBox FontSize="25" Margin="20 0 0 0" Width="200" Text="{Binding Amount}"></TextBox> <!-- Text - Data-Binding to (Invoice) ViewModel's .Amount property -->
        </StackPanel>

        <StackPanel Orientation="Horizontal" Margin="0 25 0 0">
            <TextBlock FontSize="25" VerticalAlignment="Center" TextAlignment="Center">Is Paid</TextBlock>
            <TextBlock FontSize="25" Margin="20 0 0 0" Foreground="{Binding IsPaid ? "Green" : "Red"}" Text="{Binding IsPaid}"></TextBlock> <!-- TODO: Test Data-Binding - Ternary -->
        </StackPanel>

        <StackPanel Orientation="Horizontal" Margin="0 25 0 0">

            <Button Margin="75 0 25 0" Click="Button_Click_1">Pay 1</Button> <!-- with Event-Handler Button_Click_1() -->

            <Button Command="{Binding PayCommand}">Pay 2</Button> <!-- Button - Data-Binding to (Invoice) ViewModel's (Pay) Command (with ICommand's can-exec method & delegate action) -->

        </StackPanel>

    </StackPanel>


</Page>